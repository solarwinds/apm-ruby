# Copyright (c) 2023 SolarWinds, LLC.
# All rights reserved.

name: Ruby Gem to RubyGems
# This workflow relies on the following secrets
# - RUBYGEMS_TOKEN (from the solarwinds-apm user on rubygems.org)
# - APM_RUBY_INSTALL_TESTING_SWO_KEY
#

on:
  workflow_dispatch:

jobs:
  # act -j publish_to_ruby_gem --container-architecture linux/arm64 --secret-file act.secrets
  publish_to_ruby_gem:
    name: Build + Release Gem to RubyGems
    runs-on: ubuntu-latest

    outputs:
      apm_ruby_version: ${{ steps.build.outputs.gem_version }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Ruby 3.1.0 and bundle
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - name: Install gems
        run: |
          echo 'gem: --no-document' >> ~/.gemrc
          bundle install --without development --without test

      - name: Build Gem and upload to Rubygems
        id: build
        env:
          GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_TOKEN }}
        run:  |
          bundle exec rake build_and_publish_gem
          checksum=`shasum -a256 *.gem | awk '{print $1;}'`
          echo "checksum: $checksum"
          echo "checksum=$checksum" >> $GITHUB_OUTPUT
          echo "gem_version=`ruby -e 'require "./lib/solarwinds_apm/version"; puts SolarWindsAPM::Version::STRING'`" >> $GITHUB_OUTPUT

      - name: Get checksum from Rubygems
        id: checksum
        run: |
          gem_version=${{ steps.build.outputs.gem_version }}
          echo "geminfo=`curl https://rubygems.org/api/v2/rubygems/solarwinds_apm/versions/$gem_version.json`" >> $GITHUB_OUTPUT

      - name: Print checksums (in case some debugging is needed)
        run: |
          echo "local checksum:    ${{ steps.build.outputs.checksum }}"
          echo "Rubygems checksum: ${{ fromJson(steps.checksum.outputs.geminfo).sha }}"
          echo "Gem version:       ${{ steps.build.outputs.gem_version }}"

      - name: Fail if local and rubygems checksums don't match
        if: fromJson(steps.checksum.outputs.geminfo).sha != steps.build.outputs.checksum
        run: |
          echo "local and rubygems checksum not matching, gem needs to be yanked from rubygems.org"
          exit 1

      - name: Create release draft that includes the checksum
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.repos.createRelease({
              owner: "solarwinds",
              repo: "apm-ruby",
              body: "SHA256 checksum: ${{ steps.build.outputs.checksum }}",
              tag_name: "${{ steps.build.outputs.gem_version }}",
              name: "${{ steps.build.outputs.gem_version }}",
              draft: true
            })

      - name: Upload to artifact
        uses: actions/upload-artifact@v5
        with:
          name: solarwinds_apm-${{ steps.build.outputs.gem_version }}.gem
          path: solarwinds_apm-${{ steps.build.outputs.gem_version }}.gem

      # may need a bit of time for the gem to become available (-> sleep 1)
      - name: Download new Rubygem from rubygems.org and test
        working-directory: .github/workflows/
        env:
          SW_APM_SERVICE_KEY: ${{ secrets.APM_RUBY_INSTALL_TESTING_SWO_KEY }}
        run: |
          sleep 20
          sudo apt-get update && sudo apt-get install -y ruby-dev g++ make
          gem install solarwinds_apm --version ${{ steps.build.outputs.gem_version }}
          ruby ./scripts/test_install.rb

  # extract the built layer from artifacts, then scan it with reverselab
  reverselab_scan_gem:
    needs:
      - publish_to_ruby_gem
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v5

      - name: extract layer zip from artifacts
        uses: actions/download-artifact@v5
        with:
          name: solarwinds_apm-${{ env.SOLARWINDS_APM_VERSION }}.gem
          path: ./
        env:
          SOLARWINDS_APM_VERSION: ${{needs.publish_to_ruby_gem.outputs.apm_ruby_version}}

      - name: Scan build artifact on the Portal
        id: rl-scan
        uses: reversinglabs/gh-action-rl-scanner-cloud-only@v1
        with:
          artifact-to-scan: ./solarwinds_apm-${{ env.SOLARWINDS_APM_VERSION }}.gem
          rl-verbose: true
          rl-portal-server: solarwinds
          rl-portal-org: SolarWinds
          rl-portal-group: SaaS-Agents-SWO
          rl-package-url: solarwinds-apm-ruby/apm-ruby-prod@${{ env.SOLARWINDS_APM_VERSION }}
        env:
          RLPORTAL_ACCESS_TOKEN: ${{ secrets.REVERSE_LAB_TOKEN }}
          SOLARWINDS_APM_VERSION: ${{needs.publish_to_ruby_gem.outputs.apm_ruby_version}}

      - name: report the scan status
        if: success() || failure()
        run: |
          echo "The status is: '${{ steps.rl-scan.outputs.status }}'"
          echo "The description is: '${{ steps.rl-scan.outputs.description }}'"
